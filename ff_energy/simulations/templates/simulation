* GENERATED BY
*
*

set base {{BASEPATHNAME}}

set min {{min}}
set heat {{heat}}
set equi {{equi}}
set dyna {{dyna}}
set dt = {{dt}}
set n {{N}}

!============================================================
! Topology and Parameter Files
!============================================================
{{STREAM}}
{{TOP}}
{{PAR}}

!============================================================
! Generate the System
!============================================================

! Read PSF
open read unit 10 card name {{PSFNAME}}
read psf  unit 10 card xplor

! Read Coordinate
open read unit 10 card name {{CRDNAME}}
read coor unit 10 card

!============================================================
! Setup PBC (Periodic Boundary Condition)
!============================================================
coor stat sele all end
calc xdim = int ( ( ?xmax - ?xmin + 0.0 ) ) + 1
calc ydim = int ( ( ?ymax - ?ymin + 0.0 ) ) + 1
calc zdim = int ( ( ?zmax - ?zmin + 0.0 ) ) + 1
set bsiz = 0
if @xdim .gt. @bsiz then
   set bsiz = @xdim
endif
if @ydim .gt. @bsiz then
   set bsiz = @ydim
endif
if @zdim .gt. @bsiz then
   set bsiz = @zdim
endif
open read unit 10 card name crystal_image.str
crystal defi cubic @bsiz @bsiz @bsiz 90. 90. 90.
crystal build nope 0
image byres xcen 0.0 ycen 0.0 zcen 0.0 sele all end

!============================================================
! Define Force Field
!============================================================
nbonds atom ewald pmewald kappa 0.43 -
   fftx 32 ffty 32 fftz 32 order 4 -
   cutnb 14.0  ctofnb 12.0 ctonnb 8.0 -
   lrc vdw vswitch inbfrq -1 imgfrq -1

!============================================================
! Define Constraints
!============================================================

! Fix all bond distances for bonds including at least one H atom
!SHAKE BONH TOLErance 1.0e-8 PARAMeter
{{SHAKE}}

!============================================================
! Charge Model
!============================================================

{{CHARGEMODEL}}

!============================================================
! Short minimization of atoms
!============================================================

label MINILOOP
if @min .eq. 0 then
!! Strucuture optimization
mini sd nstep 20 nprint 1000
! Save optimized structure
open write unit 10 card name {{fn}}.mini.pdb
write coor unit 10 pdb
CLOSE UNIT 10
ENDIF
!============================================================

!============================================================
! Heating Simulation
!============================================================

OPEN WRITE UNIT 31 CARD NAME {{fn}}.heat.res      ! Restart file
OPEN WRITE UNIT 32 FILE NAME {{fn}}.heat.dcd      ! Coordinates file

set nstep = {{NSTEPHEAT}}

DYNA STRT VERL NSTE @nstep TIME @dt -
   INBFRQ -1 IMGFRQ 20 IHBFRQ 0 -
   IPRFRQ 500 IHTFRQ 2000 NTRFRQ 500 -
   IUNREA -1 IUNWRI 31 IUNCRD 32 IUNVEL -1  -
   NPRINT 1000 NSAVC 1000 -
   FIRSTT 100.0 FINALT @temp TEMINC 10.0 -
   TWINDH 10.0 TWINDL -10.0 -
   IASORS 1 IASVEL 1 ICHECW 0


OPEN UNIT 1 WRITE CARD NAME {{fn}}.heat.pdb
WRITE COOR PDB UNIT 1
CLOSE UNIT 1

OPEN UNIT 1 WRITE CARD NAME {{fn}}.heat.crd
WRITE COOR CARD UNIT 1
CLOSE UNIT 1


!============================================================
! Equilibration Simulation
!============================================================
label EQUILLOOP
if @equi .eq. 0 then

set nstep = 5000000
set dt = 0.0002
set temp = 300.0

OPEN READ  UNIT 30 CARD NAME {{fn}}.heat.res      ! Restart file
OPEN WRITE UNIT 31 CARD NAME {{fn}}.equi.res      ! Restart file
OPEN WRITE UNIT 32 FILE NAME {{fn}}.equi.dcd      ! Coordinates file

set nstep = {{NSTEPEQUI}}
set dt = {{DT}}
set temp = {{TEMP}}

scalar mass stat
calc Pmass = int ( ?stot  /  50.0 )

DYNA RESTRT CPT LEAP NSTE @nstep TIME @dt -
   INBFRQ -1 IMGFRQ 50 IHBFRQ 0 -
   IUNREA 30 IUNWRI 31 IUNCRD 32 IUNVEL -1 -
   IHTFRQ 0 IEQFRQ 2000 NTRFRQ 2000 -
   NPRINT 10000 IPRFRQ 10000 NSAVC 10000  -
   PCONSTANT PREF   1.0  PMASS @Pmass  PGAMMA   20.0 -
   HOOVER    REFT @temp  TMASS 2000.0  TBATH   @temp

OPEN UNIT 1 WRITE CARD NAME {{fn}}.equi.pdb
WRITE COOR PDB UNIT 1
CLOSE UNIT 1

OPEN UNIT 1 WRITE CARD NAME {{fn}}.equi.crd
WRITE COOR CARD UNIT 1
CLOSE UNIT 1

!============================================================
! Dynamics (Production) Simulation
!============================================================

label DYNALOOP
if @dyna .eq. 0 then

set nstep = {{NSTEPDYN}}
set dt = {{dt}}
set temp = {{TEMP}}

if @n .eq. 0 then
  set m @n
  open read unit 33 card name {{fn}}.equi.res     ! Restart file
  open write unit 34 card name {{fn}}.dyna.@n.res ! Restart file
  open write unit 35 file name {{fn}}.dyna.@n.dcd ! Coordinates file
else
  calc m @n-1
  open read unit 33 card name {{fn}}.dyna.@m.res
  open write unit 34 card name {{fn}}.@n.res
  open write unit 35 file name {{fn}}.dyna.@n.dcd
endif

DYNA RESTRT CPT LEAP NSTE @nstep TIME @dt -
   INBFRQ -1 IMGFRQ 50 IHBFRQ 50 -
   IUNREA 30 IUNWRI 31 IUNCRD 32 IUNVEL -1 -
   IHTFRQ 2000 IEQFRQ 2000 NTRFRQ 2000 -
   NPRINT 1000 IPRFRQ 1000  -
   PCONSTANT PREF   1.0  PMASS @Pmass  PGAMMA   20.0 -
   HOOVER    REFT @temp  TMASS 2000.0  TBATH   @temp

open unit 1 write card name {{fn}}.dyna.@n.crd
write coor card unit 1
close unit 1

open write unit 10 card name {{fn}}.dyna.@n.pdb
write coor unit 10 pdb

close unit 33
close unit 34
close unit 35

increase n by 1
if n lt 100 goto DYNALOOP

endif
!============================================================

STOP
